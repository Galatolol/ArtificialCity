import java.awt.EventQueue;
import java.awt.Graphics;
import java.awt.Image;
import java.awt.MediaTracker;
import java.awt.Toolkit;

import javax.swing.JFrame;
import javax.swing.JPanel;
import java.awt.BorderLayout;

public class Ramka {

	private JFrame frame;

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					Ramka window = new Ramka();
					window.frame.setVisible(true);
				} catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the application.
	 */
	public Ramka() {
		initialize();
	}

	/**
	 * Initialize the contents of the frame.
	 */
	private void initialize() {
		frame = new JFrame();
		frame.setBounds(100, 100, 450, 300);
		frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		
		ContentPanel panel = new ContentPanel();
		frame.getContentPane().add(panel, BorderLayout.CENTER);
	}

}

class ContentPanel extends JPanel {
	private Image bgImage = null;

	ContentPanel() {
		setLayout(new BorderLayout());
		MediaTracker mt = new MediaTracker(this);
		bgImage = Toolkit.getDefaultToolkit().getImage("res/map.jpg");
		mt.addImage(bgImage, 0);
		try {
			mt.waitForAll();
		} catch (InterruptedException e) {
			e.printStackTrace();
		}
	}

	protected void paintComponent(Graphics g) {
		super.paintComponent(g);
		int imWidth = bgImage.getWidth(null);
		int imHeight = bgImage.getHeight(null);
		
		Graph myGraph = new Graph();
	    myGraph.init();
		
	    g.drawImage(bgImage, 0, 0, 1000, 1000, null);
		
		/*for(int i = 0; i < myGraph.vertices.size(); i++) {
			g.setColor(Color.RED);
			g.fillOval(myGraph.vertices.get(i).getX() - Frame.RAD, 
					   myGraph.vertices.get(i).getY() - Frame.RAD, 
					   Frame.RAD*2, Frame.RAD*2);
		}
		
		Collection<E> edges = myGraph.graph.getEdges();
		for(E e : edges) {
			g.setColor(Color.BLUE);
			for(int i = 0; i < e.getLanesNum(); i++) {
				for(int j = 0; j < e.cellTab[i].cellList.length; j++) {
					g.fillRect(e.cellTab[i].cellList[j].getX(), e.cellTab[i].cellList[j].getY(), 5, 2);
				}
			}
			
			
			
			g.setColor(Color.GREEN);
			g.drawLine(e.getBeginX(), e.getBeginY(), e.getEndX(), e.getEndY());
		}
		*/
  }
}
