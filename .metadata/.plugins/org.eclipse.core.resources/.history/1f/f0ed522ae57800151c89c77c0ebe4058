import java.awt.Color;
import java.awt.Graphics;
import java.awt.Image;
import java.awt.MediaTracker;
import java.awt.Toolkit;
import java.util.ArrayList;
import java.util.Collection;
import java.util.List;

import javax.swing.JFrame;
import javax.swing.JPanel;

public class Frame extends JFrame {
	
	public static final int WIDTH = 1000;
	public static final int HEIGHT = 1000;
	public static final int RAD = 5;
 
	Frame() {
		add(new ContentPanel());
		setSize(WIDTH, HEIGHT);
	}

	public static void main(String[] args) {
		Frame myFrame = new Frame();
		myFrame.setResizable(false);
		myFrame.setVisible(true);
		myFrame.setDefaultCloseOperation(EXIT_ON_CLOSE);
	}

}

class ContentPanel extends JPanel {
	private Image bgImage = null;

	ContentPanel() {
		MediaTracker mt = new MediaTracker(this);
		bgImage = Toolkit.getDefaultToolkit().getImage("res/map.jpg");
		mt.addImage(bgImage, 0);
		try {
			mt.waitForAll();
		} catch (InterruptedException e) {
			e.printStackTrace();
		}
	}

	protected void paintComponent(Graphics g) {
		super.paintComponent(g);
		int imWidth = bgImage.getWidth(null);
		int imHeight = bgImage.getHeight(null);
		
		Graph myGraph = new Graph();
	    myGraph.init();
		
	    g.drawImage(bgImage, 0, 0, this.getWidth(), this.getHeight(), null);
	    List<Person> personList = new ArrayList<Person>();
		List<Vehicle> vehicleList = new ArrayList<Vehicle>();
		
		CellList[] cellListTab = new CellList[3];
		cellListTab[0] = new CellList(15, new V(2, 90, 965), new V(1, 55, 965), 2, 0);
		cellListTab[1] = new CellList(15, new V(2, 90, 965), new V(1, 55, 965), 1, 1);
		cellListTab[2] = new CellList(15, new V(2, 90, 965), new V(1, 55, 965), 0, 2);
		
		Vehicle auto = new Car(null);
		auto.setCellListTab(cellListTab);
		auto.setCurrentListNr(1);
		auto.setCurrentCell(cellListTab[0].cellList[0]);
		auto.setSpeed(1);
		auto.curveLeft();
		vehicleList.add(auto);
		
		for (int i = 0; i < 15; i++)
		{
			System.out.println("Jednostka czasu: " + i);
			Test.displayInfoAboutCar(auto);
			Movement.move(vehicleList);
			auto.paint(g);
		}
		
		/*for(int i = 0; i < myGraph.vertices.size(); i++) {
			g.setColor(Color.RED);
			g.fillOval(myGraph.vertices.get(i).getX() - Frame.RAD, 
					   myGraph.vertices.get(i).getY() - Frame.RAD, 
					   Frame.RAD*2, Frame.RAD*2);
		}
		
		Collection<E> edges = myGraph.graph.getEdges();
		for(E e : edges) {
			g.setColor(Color.BLUE);
			for(int i = 0; i < e.getLanesNum(); i++) {
				for(int j = 0; j < e.cellTab[i].cellList.length; j++) {
					g.fillRect(e.cellTab[i].cellList[j].getX(), e.cellTab[i].cellList[j].getY(), 5, 5);
				}
			}
			
			
			
			g.setColor(Color.GREEN);
			g.drawLine(e.getBeginX(), e.getBeginY(), e.getEndX(), e.getEndY());
		}
		*/
  }
}